name: Deploy JSON Server to GitHub Pages

on:
  push:
    branches:
      - main

# Add this permissions block
permissions:
  contents: write
  pages: write
  id-token: write # Required for GitHub Pages deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install -g json-server

      - name: Generate static JSON files
        run: |
          mkdir -p public/api
          cp db.json public/
          
          # Generate courses endpoint
          jq '.courses' db.json > public/api/courses.json
          
          # Generate course-specific quiz endpoints
          mkdir -p public/api/courses
          jq '.courses[] | .id' db.json -r | while read -r courseId; do
            mkdir -p public/api/courses/$courseId
            jq ".quizzes | map(select(.courseId == \"$courseId\"))" db.json > public/api/courses/$courseId/quizzes.json
          done
          
          # Generate individual quiz endpoints
          mkdir -p public/api/quizzes
          jq '.quizzes[] | .id' db.json -r | while read -r quizId; do
            jq ".quizzes[] | select(.id == \"$quizId\")" db.json > public/api/quizzes/$quizId.json
          done
          
          # Create index.html
          echo '<!DOCTYPE html><html><head><title>MiniApp API</title></head><body><h1>MiniApp API</h1><p>API endpoints available at /api/...</p></body></html>' > public/index.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4